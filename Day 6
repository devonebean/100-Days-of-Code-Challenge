Day 6: Python Functions and Karel
# functions, code blocks, white loops

# defining function in python
# defining function = defines your own function
# def my_function():
    # do this()
    # then do this()
    # finally do this()
def my_function():
    print("Hello")
    print("Bye)
my_function()

# calling function in python
# calling function = carries out / executes all functions defined in your defining function
# e.g. calling my_function() after defining the function to execute
def my_function():
    print("Hello")
    print("Bye)
my_function()

# write a program to instruct a robot to jump 6 hurdles
def turn_right():
    turn_left()
    turn_left()
    turn_left()
def jump_hurdle():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
for step in range(6):
    jump_hurdle()

# while loop in python
# while loop = used to iterate over a block of code as long as the test expression (condition) is true
# while something_is_true:
    # do this()
    # then do this()
    # then do this()
number of hurdles = 6
while number_of_hurdles > 0:
    jump()
    number_of_hurdles -= 1
# write a program to instruct a robot to jump over randomly spaced hurdles
def turn_right():
    turn_left()
    turn_left()
    turn_left()    
def jump_hurdle():
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()    
while not at_goal():
    if wall_in_front():
        jump_hurdle()
    else:
        move()
# write a program to instruct a robot to jump over randomly spaced hurdles at various heights
def turn_right():
    turn_left()
    turn_left()
    turn_left()    
def jump_hurdle():
    turn_left()
    while wall_on_right():
        move()    
    turn_right()
    move()
    turn_right()    
    while front_is_clear():
        move()
    turn_left()    
while not at_goal():
    if wall_in_front():
        jump_hurdle()
    else:
        move()
